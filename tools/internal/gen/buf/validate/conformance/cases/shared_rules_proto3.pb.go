// Copyright 2023 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: buf/validate/conformance/cases/shared_rules_proto3.proto

package cases

import (
	_ "github.com/bufbuild/protovalidate/tools/internal/gen/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SharedEnumRuleProto3_EnumProto3 int32

const (
	SharedEnumRuleProto3_ENUM_PROTO3_ZERO_UNSPECIFIED SharedEnumRuleProto3_EnumProto3 = 0
	SharedEnumRuleProto3_ENUM_PROTO3_ONE              SharedEnumRuleProto3_EnumProto3 = 1
)

// Enum value maps for SharedEnumRuleProto3_EnumProto3.
var (
	SharedEnumRuleProto3_EnumProto3_name = map[int32]string{
		0: "ENUM_PROTO3_ZERO_UNSPECIFIED",
		1: "ENUM_PROTO3_ONE",
	}
	SharedEnumRuleProto3_EnumProto3_value = map[string]int32{
		"ENUM_PROTO3_ZERO_UNSPECIFIED": 0,
		"ENUM_PROTO3_ONE":              1,
	}
)

func (x SharedEnumRuleProto3_EnumProto3) Enum() *SharedEnumRuleProto3_EnumProto3 {
	p := new(SharedEnumRuleProto3_EnumProto3)
	*p = x
	return p
}

func (x SharedEnumRuleProto3_EnumProto3) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SharedEnumRuleProto3_EnumProto3) Descriptor() protoreflect.EnumDescriptor {
	return file_buf_validate_conformance_cases_shared_rules_proto3_proto_enumTypes[0].Descriptor()
}

func (SharedEnumRuleProto3_EnumProto3) Type() protoreflect.EnumType {
	return &file_buf_validate_conformance_cases_shared_rules_proto3_proto_enumTypes[0]
}

func (x SharedEnumRuleProto3_EnumProto3) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SharedEnumRuleProto3_EnumProto3.Descriptor instead.
func (SharedEnumRuleProto3_EnumProto3) EnumDescriptor() ([]byte, []int) {
	return file_buf_validate_conformance_cases_shared_rules_proto3_proto_rawDescGZIP(), []int{15, 0}
}

type SharedFloatRuleProto3 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Val float32 `protobuf:"fixed32,1,opt,name=val,proto3" json:"val,omitempty"`
}

func (x *SharedFloatRuleProto3) Reset() {
	*x = SharedFloatRuleProto3{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buf_validate_conformance_cases_shared_rules_proto3_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SharedFloatRuleProto3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SharedFloatRuleProto3) ProtoMessage() {}

func (x *SharedFloatRuleProto3) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_shared_rules_proto3_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SharedFloatRuleProto3.ProtoReflect.Descriptor instead.
func (*SharedFloatRuleProto3) Descriptor() ([]byte, []int) {
	return file_buf_validate_conformance_cases_shared_rules_proto3_proto_rawDescGZIP(), []int{0}
}

func (x *SharedFloatRuleProto3) GetVal() float32 {
	if x != nil {
		return x.Val
	}
	return 0
}

type SharedDoubleRuleProto3 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Val float64 `protobuf:"fixed64,1,opt,name=val,proto3" json:"val,omitempty"`
}

func (x *SharedDoubleRuleProto3) Reset() {
	*x = SharedDoubleRuleProto3{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buf_validate_conformance_cases_shared_rules_proto3_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SharedDoubleRuleProto3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SharedDoubleRuleProto3) ProtoMessage() {}

func (x *SharedDoubleRuleProto3) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_shared_rules_proto3_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SharedDoubleRuleProto3.ProtoReflect.Descriptor instead.
func (*SharedDoubleRuleProto3) Descriptor() ([]byte, []int) {
	return file_buf_validate_conformance_cases_shared_rules_proto3_proto_rawDescGZIP(), []int{1}
}

func (x *SharedDoubleRuleProto3) GetVal() float64 {
	if x != nil {
		return x.Val
	}
	return 0
}

type SharedInt32RuleProto3 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Val int32 `protobuf:"varint,1,opt,name=val,proto3" json:"val,omitempty"`
}

func (x *SharedInt32RuleProto3) Reset() {
	*x = SharedInt32RuleProto3{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buf_validate_conformance_cases_shared_rules_proto3_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SharedInt32RuleProto3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SharedInt32RuleProto3) ProtoMessage() {}

func (x *SharedInt32RuleProto3) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_shared_rules_proto3_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SharedInt32RuleProto3.ProtoReflect.Descriptor instead.
func (*SharedInt32RuleProto3) Descriptor() ([]byte, []int) {
	return file_buf_validate_conformance_cases_shared_rules_proto3_proto_rawDescGZIP(), []int{2}
}

func (x *SharedInt32RuleProto3) GetVal() int32 {
	if x != nil {
		return x.Val
	}
	return 0
}

type SharedInt64RuleProto3 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Val int64 `protobuf:"varint,1,opt,name=val,proto3" json:"val,omitempty"`
}

func (x *SharedInt64RuleProto3) Reset() {
	*x = SharedInt64RuleProto3{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buf_validate_conformance_cases_shared_rules_proto3_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SharedInt64RuleProto3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SharedInt64RuleProto3) ProtoMessage() {}

func (x *SharedInt64RuleProto3) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_shared_rules_proto3_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SharedInt64RuleProto3.ProtoReflect.Descriptor instead.
func (*SharedInt64RuleProto3) Descriptor() ([]byte, []int) {
	return file_buf_validate_conformance_cases_shared_rules_proto3_proto_rawDescGZIP(), []int{3}
}

func (x *SharedInt64RuleProto3) GetVal() int64 {
	if x != nil {
		return x.Val
	}
	return 0
}

type SharedUInt32RuleProto3 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Val uint32 `protobuf:"varint,1,opt,name=val,proto3" json:"val,omitempty"`
}

func (x *SharedUInt32RuleProto3) Reset() {
	*x = SharedUInt32RuleProto3{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buf_validate_conformance_cases_shared_rules_proto3_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SharedUInt32RuleProto3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SharedUInt32RuleProto3) ProtoMessage() {}

func (x *SharedUInt32RuleProto3) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_shared_rules_proto3_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SharedUInt32RuleProto3.ProtoReflect.Descriptor instead.
func (*SharedUInt32RuleProto3) Descriptor() ([]byte, []int) {
	return file_buf_validate_conformance_cases_shared_rules_proto3_proto_rawDescGZIP(), []int{4}
}

func (x *SharedUInt32RuleProto3) GetVal() uint32 {
	if x != nil {
		return x.Val
	}
	return 0
}

type SharedUInt64RuleProto3 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Val uint64 `protobuf:"varint,1,opt,name=val,proto3" json:"val,omitempty"`
}

func (x *SharedUInt64RuleProto3) Reset() {
	*x = SharedUInt64RuleProto3{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buf_validate_conformance_cases_shared_rules_proto3_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SharedUInt64RuleProto3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SharedUInt64RuleProto3) ProtoMessage() {}

func (x *SharedUInt64RuleProto3) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_shared_rules_proto3_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SharedUInt64RuleProto3.ProtoReflect.Descriptor instead.
func (*SharedUInt64RuleProto3) Descriptor() ([]byte, []int) {
	return file_buf_validate_conformance_cases_shared_rules_proto3_proto_rawDescGZIP(), []int{5}
}

func (x *SharedUInt64RuleProto3) GetVal() uint64 {
	if x != nil {
		return x.Val
	}
	return 0
}

type SharedSInt32RuleProto3 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Val int32 `protobuf:"zigzag32,1,opt,name=val,proto3" json:"val,omitempty"`
}

func (x *SharedSInt32RuleProto3) Reset() {
	*x = SharedSInt32RuleProto3{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buf_validate_conformance_cases_shared_rules_proto3_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SharedSInt32RuleProto3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SharedSInt32RuleProto3) ProtoMessage() {}

func (x *SharedSInt32RuleProto3) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_shared_rules_proto3_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SharedSInt32RuleProto3.ProtoReflect.Descriptor instead.
func (*SharedSInt32RuleProto3) Descriptor() ([]byte, []int) {
	return file_buf_validate_conformance_cases_shared_rules_proto3_proto_rawDescGZIP(), []int{6}
}

func (x *SharedSInt32RuleProto3) GetVal() int32 {
	if x != nil {
		return x.Val
	}
	return 0
}

type SharedSInt64RuleProto3 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Val int64 `protobuf:"zigzag64,1,opt,name=val,proto3" json:"val,omitempty"`
}

func (x *SharedSInt64RuleProto3) Reset() {
	*x = SharedSInt64RuleProto3{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buf_validate_conformance_cases_shared_rules_proto3_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SharedSInt64RuleProto3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SharedSInt64RuleProto3) ProtoMessage() {}

func (x *SharedSInt64RuleProto3) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_shared_rules_proto3_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SharedSInt64RuleProto3.ProtoReflect.Descriptor instead.
func (*SharedSInt64RuleProto3) Descriptor() ([]byte, []int) {
	return file_buf_validate_conformance_cases_shared_rules_proto3_proto_rawDescGZIP(), []int{7}
}

func (x *SharedSInt64RuleProto3) GetVal() int64 {
	if x != nil {
		return x.Val
	}
	return 0
}

type SharedFixed32RuleProto3 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Val uint32 `protobuf:"fixed32,1,opt,name=val,proto3" json:"val,omitempty"`
}

func (x *SharedFixed32RuleProto3) Reset() {
	*x = SharedFixed32RuleProto3{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buf_validate_conformance_cases_shared_rules_proto3_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SharedFixed32RuleProto3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SharedFixed32RuleProto3) ProtoMessage() {}

func (x *SharedFixed32RuleProto3) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_shared_rules_proto3_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SharedFixed32RuleProto3.ProtoReflect.Descriptor instead.
func (*SharedFixed32RuleProto3) Descriptor() ([]byte, []int) {
	return file_buf_validate_conformance_cases_shared_rules_proto3_proto_rawDescGZIP(), []int{8}
}

func (x *SharedFixed32RuleProto3) GetVal() uint32 {
	if x != nil {
		return x.Val
	}
	return 0
}

type SharedFixed64RuleProto3 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Val uint64 `protobuf:"fixed64,1,opt,name=val,proto3" json:"val,omitempty"`
}

func (x *SharedFixed64RuleProto3) Reset() {
	*x = SharedFixed64RuleProto3{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buf_validate_conformance_cases_shared_rules_proto3_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SharedFixed64RuleProto3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SharedFixed64RuleProto3) ProtoMessage() {}

func (x *SharedFixed64RuleProto3) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_shared_rules_proto3_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SharedFixed64RuleProto3.ProtoReflect.Descriptor instead.
func (*SharedFixed64RuleProto3) Descriptor() ([]byte, []int) {
	return file_buf_validate_conformance_cases_shared_rules_proto3_proto_rawDescGZIP(), []int{9}
}

func (x *SharedFixed64RuleProto3) GetVal() uint64 {
	if x != nil {
		return x.Val
	}
	return 0
}

type SharedSFixed32RuleProto3 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Val int32 `protobuf:"fixed32,1,opt,name=val,proto3" json:"val,omitempty"`
}

func (x *SharedSFixed32RuleProto3) Reset() {
	*x = SharedSFixed32RuleProto3{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buf_validate_conformance_cases_shared_rules_proto3_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SharedSFixed32RuleProto3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SharedSFixed32RuleProto3) ProtoMessage() {}

func (x *SharedSFixed32RuleProto3) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_shared_rules_proto3_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SharedSFixed32RuleProto3.ProtoReflect.Descriptor instead.
func (*SharedSFixed32RuleProto3) Descriptor() ([]byte, []int) {
	return file_buf_validate_conformance_cases_shared_rules_proto3_proto_rawDescGZIP(), []int{10}
}

func (x *SharedSFixed32RuleProto3) GetVal() int32 {
	if x != nil {
		return x.Val
	}
	return 0
}

type SharedSFixed64RuleProto3 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Val int64 `protobuf:"fixed64,1,opt,name=val,proto3" json:"val,omitempty"`
}

func (x *SharedSFixed64RuleProto3) Reset() {
	*x = SharedSFixed64RuleProto3{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buf_validate_conformance_cases_shared_rules_proto3_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SharedSFixed64RuleProto3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SharedSFixed64RuleProto3) ProtoMessage() {}

func (x *SharedSFixed64RuleProto3) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_shared_rules_proto3_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SharedSFixed64RuleProto3.ProtoReflect.Descriptor instead.
func (*SharedSFixed64RuleProto3) Descriptor() ([]byte, []int) {
	return file_buf_validate_conformance_cases_shared_rules_proto3_proto_rawDescGZIP(), []int{11}
}

func (x *SharedSFixed64RuleProto3) GetVal() int64 {
	if x != nil {
		return x.Val
	}
	return 0
}

type SharedBoolRuleProto3 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Val bool `protobuf:"varint,1,opt,name=val,proto3" json:"val,omitempty"`
}

func (x *SharedBoolRuleProto3) Reset() {
	*x = SharedBoolRuleProto3{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buf_validate_conformance_cases_shared_rules_proto3_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SharedBoolRuleProto3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SharedBoolRuleProto3) ProtoMessage() {}

func (x *SharedBoolRuleProto3) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_shared_rules_proto3_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SharedBoolRuleProto3.ProtoReflect.Descriptor instead.
func (*SharedBoolRuleProto3) Descriptor() ([]byte, []int) {
	return file_buf_validate_conformance_cases_shared_rules_proto3_proto_rawDescGZIP(), []int{12}
}

func (x *SharedBoolRuleProto3) GetVal() bool {
	if x != nil {
		return x.Val
	}
	return false
}

type SharedStringRuleProto3 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Val string `protobuf:"bytes,1,opt,name=val,proto3" json:"val,omitempty"`
}

func (x *SharedStringRuleProto3) Reset() {
	*x = SharedStringRuleProto3{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buf_validate_conformance_cases_shared_rules_proto3_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SharedStringRuleProto3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SharedStringRuleProto3) ProtoMessage() {}

func (x *SharedStringRuleProto3) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_shared_rules_proto3_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SharedStringRuleProto3.ProtoReflect.Descriptor instead.
func (*SharedStringRuleProto3) Descriptor() ([]byte, []int) {
	return file_buf_validate_conformance_cases_shared_rules_proto3_proto_rawDescGZIP(), []int{13}
}

func (x *SharedStringRuleProto3) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

type SharedBytesRuleProto3 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Val []byte `protobuf:"bytes,1,opt,name=val,proto3" json:"val,omitempty"`
}

func (x *SharedBytesRuleProto3) Reset() {
	*x = SharedBytesRuleProto3{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buf_validate_conformance_cases_shared_rules_proto3_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SharedBytesRuleProto3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SharedBytesRuleProto3) ProtoMessage() {}

func (x *SharedBytesRuleProto3) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_shared_rules_proto3_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SharedBytesRuleProto3.ProtoReflect.Descriptor instead.
func (*SharedBytesRuleProto3) Descriptor() ([]byte, []int) {
	return file_buf_validate_conformance_cases_shared_rules_proto3_proto_rawDescGZIP(), []int{14}
}

func (x *SharedBytesRuleProto3) GetVal() []byte {
	if x != nil {
		return x.Val
	}
	return nil
}

type SharedEnumRuleProto3 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Val SharedEnumRuleProto3_EnumProto3 `protobuf:"varint,1,opt,name=val,proto3,enum=buf.validate.conformance.cases.SharedEnumRuleProto3_EnumProto3" json:"val,omitempty"`
}

func (x *SharedEnumRuleProto3) Reset() {
	*x = SharedEnumRuleProto3{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buf_validate_conformance_cases_shared_rules_proto3_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SharedEnumRuleProto3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SharedEnumRuleProto3) ProtoMessage() {}

func (x *SharedEnumRuleProto3) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_shared_rules_proto3_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SharedEnumRuleProto3.ProtoReflect.Descriptor instead.
func (*SharedEnumRuleProto3) Descriptor() ([]byte, []int) {
	return file_buf_validate_conformance_cases_shared_rules_proto3_proto_rawDescGZIP(), []int{15}
}

func (x *SharedEnumRuleProto3) GetVal() SharedEnumRuleProto3_EnumProto3 {
	if x != nil {
		return x.Val
	}
	return SharedEnumRuleProto3_ENUM_PROTO3_ZERO_UNSPECIFIED
}

type SharedMapRuleProto3 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Val map[uint64]uint64 `protobuf:"bytes,1,rep,name=val,proto3" json:"val,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *SharedMapRuleProto3) Reset() {
	*x = SharedMapRuleProto3{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buf_validate_conformance_cases_shared_rules_proto3_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SharedMapRuleProto3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SharedMapRuleProto3) ProtoMessage() {}

func (x *SharedMapRuleProto3) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_shared_rules_proto3_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SharedMapRuleProto3.ProtoReflect.Descriptor instead.
func (*SharedMapRuleProto3) Descriptor() ([]byte, []int) {
	return file_buf_validate_conformance_cases_shared_rules_proto3_proto_rawDescGZIP(), []int{16}
}

func (x *SharedMapRuleProto3) GetVal() map[uint64]uint64 {
	if x != nil {
		return x.Val
	}
	return nil
}

type SharedRepeatedRuleProto3 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Val []uint64 `protobuf:"varint,1,rep,packed,name=val,proto3" json:"val,omitempty"`
}

func (x *SharedRepeatedRuleProto3) Reset() {
	*x = SharedRepeatedRuleProto3{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buf_validate_conformance_cases_shared_rules_proto3_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SharedRepeatedRuleProto3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SharedRepeatedRuleProto3) ProtoMessage() {}

func (x *SharedRepeatedRuleProto3) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_shared_rules_proto3_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SharedRepeatedRuleProto3.ProtoReflect.Descriptor instead.
func (*SharedRepeatedRuleProto3) Descriptor() ([]byte, []int) {
	return file_buf_validate_conformance_cases_shared_rules_proto3_proto_rawDescGZIP(), []int{17}
}

func (x *SharedRepeatedRuleProto3) GetVal() []uint64 {
	if x != nil {
		return x.Val
	}
	return nil
}

type SharedDurationRuleProto3 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Val *durationpb.Duration `protobuf:"bytes,1,opt,name=val,proto3" json:"val,omitempty"`
}

func (x *SharedDurationRuleProto3) Reset() {
	*x = SharedDurationRuleProto3{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buf_validate_conformance_cases_shared_rules_proto3_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SharedDurationRuleProto3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SharedDurationRuleProto3) ProtoMessage() {}

func (x *SharedDurationRuleProto3) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_shared_rules_proto3_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SharedDurationRuleProto3.ProtoReflect.Descriptor instead.
func (*SharedDurationRuleProto3) Descriptor() ([]byte, []int) {
	return file_buf_validate_conformance_cases_shared_rules_proto3_proto_rawDescGZIP(), []int{18}
}

func (x *SharedDurationRuleProto3) GetVal() *durationpb.Duration {
	if x != nil {
		return x.Val
	}
	return nil
}

type SharedTimestampRuleProto3 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Val *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=val,proto3" json:"val,omitempty"`
}

func (x *SharedTimestampRuleProto3) Reset() {
	*x = SharedTimestampRuleProto3{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buf_validate_conformance_cases_shared_rules_proto3_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SharedTimestampRuleProto3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SharedTimestampRuleProto3) ProtoMessage() {}

func (x *SharedTimestampRuleProto3) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_shared_rules_proto3_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SharedTimestampRuleProto3.ProtoReflect.Descriptor instead.
func (*SharedTimestampRuleProto3) Descriptor() ([]byte, []int) {
	return file_buf_validate_conformance_cases_shared_rules_proto3_proto_rawDescGZIP(), []int{19}
}

func (x *SharedTimestampRuleProto3) GetVal() *timestamppb.Timestamp {
	if x != nil {
		return x.Val
	}
	return nil
}

type SharedAndCustomRuleProto3 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	A int32                             `protobuf:"varint,1,opt,name=a,proto3" json:"a,omitempty"`
	B *SharedAndCustomRuleProto3_Nested `protobuf:"bytes,2,opt,name=b,proto3,oneof" json:"b,omitempty"`
}

func (x *SharedAndCustomRuleProto3) Reset() {
	*x = SharedAndCustomRuleProto3{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buf_validate_conformance_cases_shared_rules_proto3_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SharedAndCustomRuleProto3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SharedAndCustomRuleProto3) ProtoMessage() {}

func (x *SharedAndCustomRuleProto3) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_shared_rules_proto3_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SharedAndCustomRuleProto3.ProtoReflect.Descriptor instead.
func (*SharedAndCustomRuleProto3) Descriptor() ([]byte, []int) {
	return file_buf_validate_conformance_cases_shared_rules_proto3_proto_rawDescGZIP(), []int{20}
}

func (x *SharedAndCustomRuleProto3) GetA() int32 {
	if x != nil {
		return x.A
	}
	return 0
}

func (x *SharedAndCustomRuleProto3) GetB() *SharedAndCustomRuleProto3_Nested {
	if x != nil {
		return x.B
	}
	return nil
}

type StandardSharedAndCustomRuleProto3 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	A int32 `protobuf:"varint,1,opt,name=a,proto3" json:"a,omitempty"`
}

func (x *StandardSharedAndCustomRuleProto3) Reset() {
	*x = StandardSharedAndCustomRuleProto3{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buf_validate_conformance_cases_shared_rules_proto3_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StandardSharedAndCustomRuleProto3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StandardSharedAndCustomRuleProto3) ProtoMessage() {}

func (x *StandardSharedAndCustomRuleProto3) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_shared_rules_proto3_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StandardSharedAndCustomRuleProto3.ProtoReflect.Descriptor instead.
func (*StandardSharedAndCustomRuleProto3) Descriptor() ([]byte, []int) {
	return file_buf_validate_conformance_cases_shared_rules_proto3_proto_rawDescGZIP(), []int{21}
}

func (x *StandardSharedAndCustomRuleProto3) GetA() int32 {
	if x != nil {
		return x.A
	}
	return 0
}

type SharedAndCustomRuleProto3_Nested struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	C int32 `protobuf:"varint,1,opt,name=c,proto3" json:"c,omitempty"`
}

func (x *SharedAndCustomRuleProto3_Nested) Reset() {
	*x = SharedAndCustomRuleProto3_Nested{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buf_validate_conformance_cases_shared_rules_proto3_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SharedAndCustomRuleProto3_Nested) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SharedAndCustomRuleProto3_Nested) ProtoMessage() {}

func (x *SharedAndCustomRuleProto3_Nested) ProtoReflect() protoreflect.Message {
	mi := &file_buf_validate_conformance_cases_shared_rules_proto3_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SharedAndCustomRuleProto3_Nested.ProtoReflect.Descriptor instead.
func (*SharedAndCustomRuleProto3_Nested) Descriptor() ([]byte, []int) {
	return file_buf_validate_conformance_cases_shared_rules_proto3_proto_rawDescGZIP(), []int{20, 0}
}

func (x *SharedAndCustomRuleProto3_Nested) GetC() int32 {
	if x != nil {
		return x.C
	}
	return 0
}

var File_buf_validate_conformance_cases_shared_rules_proto3_proto protoreflect.FileDescriptor

var file_buf_validate_conformance_cases_shared_rules_proto3_proto_rawDesc = []byte{
	0x0a, 0x38, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x63,
	0x6f, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x2f, 0x63, 0x61, 0x73, 0x65, 0x73,
	0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1e, 0x62, 0x75, 0x66, 0x2e,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x61, 0x73, 0x65, 0x73, 0x1a, 0x38, 0x62, 0x75, 0x66, 0x2f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x6e, 0x63, 0x65, 0x2f, 0x63, 0x61, 0x73, 0x65, 0x73, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x64, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x32, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x40, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x2f, 0x63,
	0x61, 0x73, 0x65, 0x73, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x5f, 0x72, 0x75, 0x6c, 0x65,
	0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x36, 0x0a, 0x15, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x46, 0x6c,
	0x6f, 0x61, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x33, 0x12, 0x1d, 0x0a,
	0x03, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x42, 0x0b, 0xba, 0x48, 0x08, 0x0a,
	0x06, 0xcd, 0x48, 0x00, 0x00, 0x80, 0x3f, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22, 0x3b, 0x0a, 0x16,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x52, 0x75, 0x6c, 0x65,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x33, 0x12, 0x21, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x01, 0x42, 0x0f, 0xba, 0x48, 0x0c, 0x12, 0x0a, 0xc9, 0x48, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0xf0, 0x3f, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22, 0x33, 0x0a, 0x15, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x64, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x52, 0x75, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x33, 0x12, 0x1a, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x08, 0xba, 0x48, 0x05, 0x1a, 0x03, 0xc8, 0x48, 0x01, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22, 0x33,
	0x0a, 0x15, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x52, 0x75, 0x6c,
	0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x33, 0x12, 0x1a, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x42, 0x08, 0xba, 0x48, 0x05, 0x22, 0x03, 0xc8, 0x48, 0x01, 0x52, 0x03,
	0x76, 0x61, 0x6c, 0x22, 0x34, 0x0a, 0x16, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x55, 0x49, 0x6e,
	0x74, 0x33, 0x32, 0x52, 0x75, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x33, 0x12, 0x1a, 0x0a,
	0x03, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x08, 0xba, 0x48, 0x05, 0x2a,
	0x03, 0xc8, 0x48, 0x01, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22, 0x34, 0x0a, 0x16, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x64, 0x55, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x52, 0x75, 0x6c, 0x65, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x33, 0x12, 0x1a, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x42, 0x08, 0xba, 0x48, 0x05, 0x32, 0x03, 0xc8, 0x48, 0x01, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22,
	0x34, 0x0a, 0x16, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x53, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x52,
	0x75, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x33, 0x12, 0x1a, 0x0a, 0x03, 0x76, 0x61, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x11, 0x42, 0x08, 0xba, 0x48, 0x05, 0x3a, 0x03, 0xc8, 0x48, 0x01,
	0x52, 0x03, 0x76, 0x61, 0x6c, 0x22, 0x34, 0x0a, 0x16, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x53,
	0x49, 0x6e, 0x74, 0x36, 0x34, 0x52, 0x75, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x33, 0x12,
	0x1a, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x12, 0x42, 0x08, 0xba, 0x48,
	0x05, 0x42, 0x03, 0xc8, 0x48, 0x01, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22, 0x35, 0x0a, 0x17, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x64, 0x46, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x52, 0x75, 0x6c, 0x65,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x33, 0x12, 0x1a, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x07, 0x42, 0x08, 0xba, 0x48, 0x05, 0x4a, 0x03, 0xc8, 0x48, 0x01, 0x52, 0x03, 0x76,
	0x61, 0x6c, 0x22, 0x35, 0x0a, 0x17, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x46, 0x69, 0x78, 0x65,
	0x64, 0x36, 0x34, 0x52, 0x75, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x33, 0x12, 0x1a, 0x0a,
	0x03, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x42, 0x08, 0xba, 0x48, 0x05, 0x52,
	0x03, 0xc8, 0x48, 0x01, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22, 0x36, 0x0a, 0x18, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x64, 0x53, 0x46, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x52, 0x75, 0x6c, 0x65, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x33, 0x12, 0x1a, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0f, 0x42, 0x08, 0xba, 0x48, 0x05, 0x5a, 0x03, 0xc8, 0x48, 0x01, 0x52, 0x03, 0x76, 0x61,
	0x6c, 0x22, 0x36, 0x0a, 0x18, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x53, 0x46, 0x69, 0x78, 0x65,
	0x64, 0x36, 0x34, 0x52, 0x75, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x33, 0x12, 0x1a, 0x0a,
	0x03, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x10, 0x42, 0x08, 0xba, 0x48, 0x05, 0x62,
	0x03, 0xc8, 0x48, 0x01, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22, 0x32, 0x0a, 0x14, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x64, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x75, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x33, 0x12, 0x1a, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x42, 0x08,
	0xba, 0x48, 0x05, 0x6a, 0x03, 0xc8, 0x48, 0x01, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22, 0x34, 0x0a,
	0x16, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x75, 0x6c,
	0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x33, 0x12, 0x1a, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0x48, 0x05, 0x72, 0x03, 0xc8, 0x48, 0x01, 0x52, 0x03,
	0x76, 0x61, 0x6c, 0x22, 0x33, 0x0a, 0x15, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x42, 0x79, 0x74,
	0x65, 0x73, 0x52, 0x75, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x33, 0x12, 0x1a, 0x0a, 0x03,
	0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x08, 0xba, 0x48, 0x05, 0x7a, 0x03,
	0xc8, 0x48, 0x01, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22, 0xb9, 0x01, 0x0a, 0x14, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x64, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x75, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x33, 0x12, 0x5c, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3f,
	0x2e, 0x62, 0x75, 0x66, 0x2e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x61, 0x73, 0x65, 0x73, 0x2e,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x75, 0x6c, 0x65, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x33, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x33, 0x42,
	0x09, 0xba, 0x48, 0x06, 0x82, 0x01, 0x03, 0xc8, 0x48, 0x01, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22,
	0x43, 0x0a, 0x0a, 0x45, 0x6e, 0x75, 0x6d, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x33, 0x12, 0x20, 0x0a,
	0x1c, 0x45, 0x4e, 0x55, 0x4d, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x33, 0x5f, 0x5a, 0x45, 0x52,
	0x4f, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x13, 0x0a, 0x0f, 0x45, 0x4e, 0x55, 0x4d, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x33, 0x5f, 0x4f,
	0x4e, 0x45, 0x10, 0x01, 0x22, 0xa8, 0x01, 0x0a, 0x13, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x4d,
	0x61, 0x70, 0x52, 0x75, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x33, 0x12, 0x59, 0x0a, 0x03,
	0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x62, 0x75, 0x66, 0x2e,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x61, 0x73, 0x65, 0x73, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x64, 0x4d, 0x61, 0x70, 0x52, 0x75, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x33, 0x2e, 0x56,
	0x61, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x09, 0xba, 0x48, 0x06, 0x9a, 0x01, 0x03, 0xd0,
	0x48, 0x01, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x1a, 0x36, 0x0a, 0x08, 0x56, 0x61, 0x6c, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x37, 0x0a, 0x18, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x52, 0x75, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x33, 0x12, 0x1b, 0x0a, 0x03, 0x76,
	0x61, 0x6c, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x42, 0x09, 0xba, 0x48, 0x06, 0x92, 0x01, 0x03,
	0xc8, 0x48, 0x01, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22, 0x52, 0x0a, 0x18, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x64, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x33, 0x12, 0x36, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x09, 0xba, 0x48,
	0x06, 0xaa, 0x01, 0x03, 0xc8, 0x48, 0x01, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22, 0x54, 0x0a, 0x19,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x75, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x33, 0x12, 0x37, 0x0a, 0x03, 0x76, 0x61, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x42, 0x09, 0xba, 0x48, 0x06, 0xb2, 0x01, 0x03, 0xc8, 0x48, 0x01, 0x52, 0x03, 0x76,
	0x61, 0x6c, 0x22, 0xb5, 0x03, 0x0a, 0x19, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x41, 0x6e, 0x64,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x52, 0x75, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x33,
	0x12, 0x6d, 0x0a, 0x01, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x5f, 0xba, 0x48, 0x5c,
	0xba, 0x01, 0x54, 0x0a, 0x24, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x5f, 0x61, 0x6e, 0x64, 0x5f,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x73, 0x63, 0x61, 0x6c,
	0x61, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33, 0x1a, 0x2c, 0x74, 0x68, 0x69, 0x73, 0x20,
	0x3e, 0x20, 0x32, 0x34, 0x20, 0x3f, 0x20, 0x27, 0x27, 0x20, 0x3a, 0x20, 0x27, 0x61, 0x20, 0x6d,
	0x75, 0x73, 0x74, 0x20, 0x62, 0x65, 0x20, 0x67, 0x72, 0x65, 0x61, 0x74, 0x65, 0x72, 0x20, 0x74,
	0x68, 0x61, 0x6e, 0x20, 0x32, 0x34, 0x27, 0x1a, 0x03, 0xd0, 0x48, 0x01, 0x52, 0x01, 0x61, 0x12,
	0xb1, 0x01, 0x0a, 0x01, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x62, 0x75,
	0x66, 0x2e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x61, 0x73, 0x65, 0x73, 0x2e, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x64, 0x41, 0x6e, 0x64, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x52, 0x75, 0x6c, 0x65,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x33, 0x2e, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x42, 0x5c, 0xba,
	0x48, 0x59, 0xba, 0x01, 0x56, 0x0a, 0x26, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x5f, 0x61, 0x6e,
	0x64, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x65, 0x6d,
	0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33, 0x12, 0x1b, 0x62,
	0x2e, 0x63, 0x20, 0x6d, 0x75, 0x73, 0x74, 0x20, 0x62, 0x65, 0x20, 0x61, 0x20, 0x6d, 0x75, 0x6c,
	0x74, 0x69, 0x70, 0x6c, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x33, 0x1a, 0x0f, 0x74, 0x68, 0x69, 0x73,
	0x2e, 0x63, 0x20, 0x25, 0x20, 0x33, 0x20, 0x3d, 0x3d, 0x20, 0x30, 0x48, 0x00, 0x52, 0x01, 0x62,
	0x88, 0x01, 0x01, 0x1a, 0x6f, 0x0a, 0x06, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x12, 0x65, 0x0a,
	0x01, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x57, 0xba, 0x48, 0x54, 0xba, 0x01, 0x4c,
	0x0a, 0x24, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33, 0x1a, 0x24, 0x74, 0x68, 0x69, 0x73, 0x20, 0x3e, 0x20, 0x30,
	0x20, 0x3f, 0x20, 0x27, 0x27, 0x20, 0x3a, 0x20, 0x27, 0x63, 0x20, 0x6d, 0x75, 0x73, 0x74, 0x20,
	0x62, 0x65, 0x20, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x27, 0x1a, 0x03, 0xd0, 0x48,
	0x01, 0x52, 0x01, 0x63, 0x42, 0x04, 0x0a, 0x02, 0x5f, 0x62, 0x22, 0x9d, 0x01, 0x0a, 0x21, 0x53,
	0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x41, 0x6e, 0x64,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x52, 0x75, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x33,
	0x12, 0x78, 0x0a, 0x01, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x6a, 0xba, 0x48, 0x67,
	0xba, 0x01, 0x5d, 0x0a, 0x2d, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x64, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f,
	0x72, 0x75, 0x6c, 0x65, 0x5f, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33, 0x1a, 0x2c, 0x74, 0x68, 0x69, 0x73, 0x20, 0x3e, 0x20, 0x32, 0x34, 0x20, 0x3f, 0x20,
	0x27, 0x27, 0x20, 0x3a, 0x20, 0x27, 0x61, 0x20, 0x6d, 0x75, 0x73, 0x74, 0x20, 0x62, 0x65, 0x20,
	0x67, 0x72, 0x65, 0x61, 0x74, 0x65, 0x72, 0x20, 0x74, 0x68, 0x61, 0x6e, 0x20, 0x32, 0x34, 0x27,
	0x1a, 0x05, 0xc8, 0x48, 0x01, 0x10, 0x1c, 0x52, 0x01, 0x61, 0x42, 0xad, 0x02, 0x0a, 0x22, 0x63,
	0x6f, 0x6d, 0x2e, 0x62, 0x75, 0x66, 0x2e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x63, 0x61, 0x73, 0x65,
	0x73, 0x42, 0x16, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x33, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x53, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x75, 0x66, 0x62, 0x75, 0x69, 0x6c, 0x64,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x74,
	0x6f, 0x6f, 0x6c, 0x73, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x67, 0x65,
	0x6e, 0x2f, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x63,
	0x6f, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x2f, 0x63, 0x61, 0x73, 0x65, 0x73,
	0xa2, 0x02, 0x04, 0x42, 0x56, 0x43, 0x43, 0xaa, 0x02, 0x1e, 0x42, 0x75, 0x66, 0x2e, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e,
	0x63, 0x65, 0x2e, 0x43, 0x61, 0x73, 0x65, 0x73, 0xca, 0x02, 0x1e, 0x42, 0x75, 0x66, 0x5c, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x5c, 0x43, 0x6f, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x6e, 0x63, 0x65, 0x5c, 0x43, 0x61, 0x73, 0x65, 0x73, 0xe2, 0x02, 0x2a, 0x42, 0x75, 0x66, 0x5c,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x5c, 0x43, 0x6f, 0x6e, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x6e, 0x63, 0x65, 0x5c, 0x43, 0x61, 0x73, 0x65, 0x73, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x21, 0x42, 0x75, 0x66, 0x3a, 0x3a, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x3a, 0x3a, 0x43, 0x6f, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x6e, 0x63, 0x65, 0x3a, 0x3a, 0x43, 0x61, 0x73, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_buf_validate_conformance_cases_shared_rules_proto3_proto_rawDescOnce sync.Once
	file_buf_validate_conformance_cases_shared_rules_proto3_proto_rawDescData = file_buf_validate_conformance_cases_shared_rules_proto3_proto_rawDesc
)

func file_buf_validate_conformance_cases_shared_rules_proto3_proto_rawDescGZIP() []byte {
	file_buf_validate_conformance_cases_shared_rules_proto3_proto_rawDescOnce.Do(func() {
		file_buf_validate_conformance_cases_shared_rules_proto3_proto_rawDescData = protoimpl.X.CompressGZIP(file_buf_validate_conformance_cases_shared_rules_proto3_proto_rawDescData)
	})
	return file_buf_validate_conformance_cases_shared_rules_proto3_proto_rawDescData
}

var file_buf_validate_conformance_cases_shared_rules_proto3_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_buf_validate_conformance_cases_shared_rules_proto3_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_buf_validate_conformance_cases_shared_rules_proto3_proto_goTypes = []any{
	(SharedEnumRuleProto3_EnumProto3)(0),      // 0: buf.validate.conformance.cases.SharedEnumRuleProto3.EnumProto3
	(*SharedFloatRuleProto3)(nil),             // 1: buf.validate.conformance.cases.SharedFloatRuleProto3
	(*SharedDoubleRuleProto3)(nil),            // 2: buf.validate.conformance.cases.SharedDoubleRuleProto3
	(*SharedInt32RuleProto3)(nil),             // 3: buf.validate.conformance.cases.SharedInt32RuleProto3
	(*SharedInt64RuleProto3)(nil),             // 4: buf.validate.conformance.cases.SharedInt64RuleProto3
	(*SharedUInt32RuleProto3)(nil),            // 5: buf.validate.conformance.cases.SharedUInt32RuleProto3
	(*SharedUInt64RuleProto3)(nil),            // 6: buf.validate.conformance.cases.SharedUInt64RuleProto3
	(*SharedSInt32RuleProto3)(nil),            // 7: buf.validate.conformance.cases.SharedSInt32RuleProto3
	(*SharedSInt64RuleProto3)(nil),            // 8: buf.validate.conformance.cases.SharedSInt64RuleProto3
	(*SharedFixed32RuleProto3)(nil),           // 9: buf.validate.conformance.cases.SharedFixed32RuleProto3
	(*SharedFixed64RuleProto3)(nil),           // 10: buf.validate.conformance.cases.SharedFixed64RuleProto3
	(*SharedSFixed32RuleProto3)(nil),          // 11: buf.validate.conformance.cases.SharedSFixed32RuleProto3
	(*SharedSFixed64RuleProto3)(nil),          // 12: buf.validate.conformance.cases.SharedSFixed64RuleProto3
	(*SharedBoolRuleProto3)(nil),              // 13: buf.validate.conformance.cases.SharedBoolRuleProto3
	(*SharedStringRuleProto3)(nil),            // 14: buf.validate.conformance.cases.SharedStringRuleProto3
	(*SharedBytesRuleProto3)(nil),             // 15: buf.validate.conformance.cases.SharedBytesRuleProto3
	(*SharedEnumRuleProto3)(nil),              // 16: buf.validate.conformance.cases.SharedEnumRuleProto3
	(*SharedMapRuleProto3)(nil),               // 17: buf.validate.conformance.cases.SharedMapRuleProto3
	(*SharedRepeatedRuleProto3)(nil),          // 18: buf.validate.conformance.cases.SharedRepeatedRuleProto3
	(*SharedDurationRuleProto3)(nil),          // 19: buf.validate.conformance.cases.SharedDurationRuleProto3
	(*SharedTimestampRuleProto3)(nil),         // 20: buf.validate.conformance.cases.SharedTimestampRuleProto3
	(*SharedAndCustomRuleProto3)(nil),         // 21: buf.validate.conformance.cases.SharedAndCustomRuleProto3
	(*StandardSharedAndCustomRuleProto3)(nil), // 22: buf.validate.conformance.cases.StandardSharedAndCustomRuleProto3
	nil,                                      // 23: buf.validate.conformance.cases.SharedMapRuleProto3.ValEntry
	(*SharedAndCustomRuleProto3_Nested)(nil), // 24: buf.validate.conformance.cases.SharedAndCustomRuleProto3.Nested
	(*durationpb.Duration)(nil),              // 25: google.protobuf.Duration
	(*timestamppb.Timestamp)(nil),            // 26: google.protobuf.Timestamp
}
var file_buf_validate_conformance_cases_shared_rules_proto3_proto_depIdxs = []int32{
	0,  // 0: buf.validate.conformance.cases.SharedEnumRuleProto3.val:type_name -> buf.validate.conformance.cases.SharedEnumRuleProto3.EnumProto3
	23, // 1: buf.validate.conformance.cases.SharedMapRuleProto3.val:type_name -> buf.validate.conformance.cases.SharedMapRuleProto3.ValEntry
	25, // 2: buf.validate.conformance.cases.SharedDurationRuleProto3.val:type_name -> google.protobuf.Duration
	26, // 3: buf.validate.conformance.cases.SharedTimestampRuleProto3.val:type_name -> google.protobuf.Timestamp
	24, // 4: buf.validate.conformance.cases.SharedAndCustomRuleProto3.b:type_name -> buf.validate.conformance.cases.SharedAndCustomRuleProto3.Nested
	5,  // [5:5] is the sub-list for method output_type
	5,  // [5:5] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_buf_validate_conformance_cases_shared_rules_proto3_proto_init() }
func file_buf_validate_conformance_cases_shared_rules_proto3_proto_init() {
	if File_buf_validate_conformance_cases_shared_rules_proto3_proto != nil {
		return
	}
	file_buf_validate_conformance_cases_shared_rules_proto2_proto_init()
	file_buf_validate_conformance_cases_shared_rules_proto_editions_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_buf_validate_conformance_cases_shared_rules_proto3_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*SharedFloatRuleProto3); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buf_validate_conformance_cases_shared_rules_proto3_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*SharedDoubleRuleProto3); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buf_validate_conformance_cases_shared_rules_proto3_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*SharedInt32RuleProto3); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buf_validate_conformance_cases_shared_rules_proto3_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*SharedInt64RuleProto3); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buf_validate_conformance_cases_shared_rules_proto3_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*SharedUInt32RuleProto3); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buf_validate_conformance_cases_shared_rules_proto3_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*SharedUInt64RuleProto3); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buf_validate_conformance_cases_shared_rules_proto3_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*SharedSInt32RuleProto3); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buf_validate_conformance_cases_shared_rules_proto3_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*SharedSInt64RuleProto3); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buf_validate_conformance_cases_shared_rules_proto3_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*SharedFixed32RuleProto3); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buf_validate_conformance_cases_shared_rules_proto3_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*SharedFixed64RuleProto3); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buf_validate_conformance_cases_shared_rules_proto3_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*SharedSFixed32RuleProto3); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buf_validate_conformance_cases_shared_rules_proto3_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*SharedSFixed64RuleProto3); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buf_validate_conformance_cases_shared_rules_proto3_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*SharedBoolRuleProto3); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buf_validate_conformance_cases_shared_rules_proto3_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*SharedStringRuleProto3); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buf_validate_conformance_cases_shared_rules_proto3_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*SharedBytesRuleProto3); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buf_validate_conformance_cases_shared_rules_proto3_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*SharedEnumRuleProto3); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buf_validate_conformance_cases_shared_rules_proto3_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*SharedMapRuleProto3); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buf_validate_conformance_cases_shared_rules_proto3_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*SharedRepeatedRuleProto3); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buf_validate_conformance_cases_shared_rules_proto3_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*SharedDurationRuleProto3); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buf_validate_conformance_cases_shared_rules_proto3_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*SharedTimestampRuleProto3); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buf_validate_conformance_cases_shared_rules_proto3_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*SharedAndCustomRuleProto3); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buf_validate_conformance_cases_shared_rules_proto3_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*StandardSharedAndCustomRuleProto3); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buf_validate_conformance_cases_shared_rules_proto3_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*SharedAndCustomRuleProto3_Nested); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_buf_validate_conformance_cases_shared_rules_proto3_proto_msgTypes[20].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_buf_validate_conformance_cases_shared_rules_proto3_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_buf_validate_conformance_cases_shared_rules_proto3_proto_goTypes,
		DependencyIndexes: file_buf_validate_conformance_cases_shared_rules_proto3_proto_depIdxs,
		EnumInfos:         file_buf_validate_conformance_cases_shared_rules_proto3_proto_enumTypes,
		MessageInfos:      file_buf_validate_conformance_cases_shared_rules_proto3_proto_msgTypes,
	}.Build()
	File_buf_validate_conformance_cases_shared_rules_proto3_proto = out.File
	file_buf_validate_conformance_cases_shared_rules_proto3_proto_rawDesc = nil
	file_buf_validate_conformance_cases_shared_rules_proto3_proto_goTypes = nil
	file_buf_validate_conformance_cases_shared_rules_proto3_proto_depIdxs = nil
}
