// Copyright 2023 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package buf.validate.shared;

import "google/protobuf/descriptor.proto";

option go_package = "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate/shared";
option java_multiple_files = true;
option java_outer_classname = "SharedProto";
option java_package = "build.buf.validate.shared";

extend google.protobuf.FieldOptions {
  // Specifies a shared field constraint rule. This option can be specified on
  // fields that extend protovalidate Rules messages to add additional custom
  // shared rules that can be re-used.
  optional FieldConstraints field = 1160;
}

// FieldConstraints encapsulates the rules for each type of field. Depending on
// the field, the correct set should be used to ensure proper validations.
message FieldConstraints {
  // `cel` is a repeated field used to represent a textual expression
  // in the Common Expression Language (CEL) syntax. For more information on
  // CEL, [see our documentation](https://github.com/bufbuild/protovalidate/blob/main/docs/cel.md).
  //
  // ```proto
  // message MyMessage {
  //   // The field `value` must be greater than 42.
  //   optional int32 value = 1 [(buf.validate.shared.field).cel = {
  //     id: "my_message.value",
  //     message: "value must be greater than 42",
  //     expression: "this > 42",
  //   }];
  // }
  // ```
  repeated Constraint cel = 1;
}

// `Constraint` represents a validation rule written in the Common Expression
// Language (CEL) syntax. Each Constraint includes a unique identifier, an
// optional error message, and the CEL expression to evaluate. For more
// information on CEL, [see our documentation](https://github.com/bufbuild/protovalidate/blob/main/docs/cel.md).
//
// ```proto
// message Foo {
//   option (buf.validate.message).cel = {
//     id: "foo.bar"
//     message: "bar must be greater than 0"
//     expression: "this.bar > 0"
//   };
//   int32 bar = 1;
// }
// ```
message Constraint {
  // `id` is a string that serves as a machine-readable name for this Constraint.
  // It should be unique within its scope, which could be either a message or a field.
  string id = 1;

  // `message` is an optional field that provides a human-readable error message
  // for this Constraint when the CEL expression evaluates to false. If a
  // non-empty message is provided, any strings resulting from the CEL
  // expression evaluation are ignored.
  string message = 2;

  // `expression` is the actual CEL expression that will be evaluated for
  // validation. This string must resolve to either a boolean or a string
  // value. If the expression evaluates to false or a non-empty string, the
  // validation is considered failed, and the message is rejected.
  string expression = 3;
}
