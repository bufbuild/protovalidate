syntax = "proto3";

import "buf/validate/validate.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";

service FlightInfoService {
  // UpdateFlightInfo updates a flight's information.
  rpc UpdateFlightInfo(UpdateFlightInfoRequest) returns (UpdateFlightInfoResponse);
}

message UpdateFlightInfoRequest {
  option (buf.validate.message).cel = {
    id: "correct_duration",
    message: "duration must be the period of time between departure and arrival",
    // Adding a timestamp and a duration evaluates to a new timestamp.
    // Two timestamps can be compared with `==`, `!=`, `<`, `<=`, `>` and `>=`.
    expression: "this.new_departure_time + this.new_duration  == this.new_arrival_time"
  };
  uint64 flight_id = 1;
  // departure_time is the departure time.
  google.protobuf.Timestamp new_departure_time = 2;
  // arrival_time is the arrival time.
  google.protobuf.Timestamp new_arrival_time = 3;
  // duration is the flight's duration.
  google.protobuf.Duration new_duration = 4;
}

message UpdateFlightInfoResponse {}
