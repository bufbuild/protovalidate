syntax = "proto3";

import "buf/validate/validate.proto";

service ArticleService {
  // PublishArticle publishes an article.
  rpc PublishArticle(PublishArticleRequest) returns (PublishArticleResponse);
}

message PublishArticleRequest {
  option (buf.validate.message).cel = {
    id: "article_contain_keyword",
    message: "article must contain all the keywords it is tagged with",
    // For each keyword `kw`, valiate that it appears in the article.
    // `contains` checks whether a string contains another string.
    expression: "this.keyword.all(kw, this.article_content.contains(kw))"
  };
  string article_content = 1;
  // keyword is the keyword that this article is associated with.
  repeated string keyword = 2;
}

message PublishArticleResponse {}
